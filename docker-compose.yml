version: '3.8'

services:
  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile_elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=${NODE_TYPE}
      - ES_JAVA_OPTS=${ES_OPTS}
      - xpack.security.enabled=${SECURITY_CONFIG}
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - ELASTICSEARCH_PLUGINS=${ES_PLUGIN}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "${ES_INTERNAL_PORT_1}:${ES_EXTERNAL_PORT_1}"
      - "${ES_INTERNAL_PORT_2}:${ES_EXTERNAL_PORT_2}"
    networks:
      - LLL3_network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  kibana:
    image: kibana:8.12.2
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "${KIBANA_INTERNAL_PORT}:${KIBANA_EXTERNAL_PORT}"
    networks:
      - LLL3_network
    environment:
      ELASTICSEARCH_HOSTS: ${ES_HOST}

  mysql:
    image: mysql:8.0
    #    restart: always
    volumes:
      - ./conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./sql:/docker-entrypoint-initdb.d
      - ./db/mysql/data:/var/lib/mysql
    ports:
      - "${DB_INTERNAL_PORT}:${DB_EXTERNAL_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - TZ=Asia/Seoul

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "${REDIS_INTERNAL_PORT}:${REDIS_EXTERNAL_PORT}"
    networks:
      - LLL3_network

networks:
  LLL3_network:
    driver: bridge